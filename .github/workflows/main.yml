# This is a basic workflow to help you get started with Actions

name: Package

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    tags: 
      - 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '14'  

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: npm ci
      - name: Package binaries
        run: |
          npm run build
          zip --junk-paths polyglot-code-offline-layout-linux.zip dist/polyglot-code-offline-layout-linux README.md
          zip --junk-paths polyglot-code-offline-layout-macos.zip dist/polyglot-code-offline-layout-macos README.md
          zip --junk-paths polyglot-code-offline-layout-win.zip dist/polyglot-code-offline-layout-win.exe README.md
      - name: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            No release notes yet
          draft: false
          prerelease: false
      - name: Upload Release Asset 1
        id: upload-release-asset-1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./polyglot-code-offline-layout-linux.zip
          asset_name: polyglot-code-offline-layout-linux.zip
          asset_content_type: application/zip
      - name: Upload Release Asset 2
        id: upload-release-asset-2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./polyglot-code-offline-layout-macos.zip
          asset_name: polyglot-code-offline-layout-macos.zip
          asset_content_type: application/zip
      - name: Upload Release Asset 3
        id: upload-release-asset-3
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./polyglot-code-offline-layout-win.zip
          asset_name: polyglot-code-offline-layout-win.zip
          asset_content_type: application/zip
